name: Checks

on:
  push:

jobs:
  cargo-check:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204
          - os: macos-13-latest
            arch: arm64
            runs-on: macos-13-xlarge

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run Cargo Check in nix environment
      run: nix develop --command bash  -c "cargo check --all-targets"  

  suzuka-full-node-local:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-16vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run Suzuka Full Node Tests Against Local ETH and Local Celestia
      env:
        CELESTIA_LOG_LEVEL: FATAL # adjust the log level while debugging
      run: |
        nix develop --command bash  -c "just suzuka-full-node native build.setup.eth-local.celestia-local.test -t=false"
        nix develop --command bash  -c "just suzuka-full-node native build.setup.eth-local.celestia-local.test -t=false"  
  
  suzuka-full-node-remote:
    if: false 
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run Suzuka Full Node Tests Against Holesky and Local Celestia
      env: 
        CELESTIA_LOG_LEVEL: FATAL # adjust the log level while debugging
      run: |
        export MCR_DEPLOYMENT_ACCOUNT_PRIVATE_KEY=${{ secrets.MCR_DEPLOYMENT_ACCOUNT_PRIVATE_KEY }}
        nix develop --command bash  -c "just suzuka-full-node native build.setup.eth-holesky.celestia-local.test -t=false"
        nix develop --command bash  -c "just suzuka-full-node native build.setup.eth-holesky.celestia-local.test -t=false"

  m1-da-light-node:
    if: false # this is effectively tested by the above
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run M1 DA Light Node tests in nix environment
      # adjust the log level while debugging
      run: CELESTIA_LOG_LEVEL=FATAL nix develop --command bash  -c "just m1-da-light-node native build.setup.test.local -t=false"  

    - name: Run foundry tests
      # Run the foundry solidity contracts using the WETH9 contract on sepolia
      run: cd protocol-units/bridge/contracts && forge test --fork-url https://ethereum-sepolia-rpc.publicnode.com -vv  

  mcr:
#    if: false
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run MCR tests in nix environment
      # adjust the log level while debugging
      run: CELESTIA_LOG_LEVEL=FATAL nix develop --command bash  -c "just mcr native test.local -t=false"  

    - name: Run MCR Client Tests
      run: nix develop --command bash  -c "just mcr-client native build.local.test -t=false"

  move-modules-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Aptos CLI
      run: |
        curl -fsSL "https://aptos.dev/scripts/install_cli.py" | python3

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run Aptos Tests
      run: |
        nix develop --command bash -c "
          set -e
          set -x
          chmod +x .github/scripts/update_move_toml.sh && \
          ./.github/scripts/update_move_toml.sh && \
          cd protocol-units/bridge/move-modules && \
          aptos move test
        "

  solidity-bridge-tests:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run foundry tests
      run: |
        nix develop --command bash -c "
            cd protocol-units/bridge/contracts && \
            forge test --fork-url https://ethereum-sepolia-rpc.publicnode.com -vv
        "

  bridge-eth-movement:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run foundry tests
      run: |
        nix develop --command bash -c "
          cargo test --test eth_movement -- --nocapture --test-threads=1 
        "
 
